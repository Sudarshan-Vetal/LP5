import numpy as np
import pandas as pd

import tensorflow as tf

import matplotlib.pyplot as plt
%matplotlib inline

fashion_mnist = tf.keras.datasets.fashion_mnist
(train_images, train_labels), (test_images, test_labels) = fashion_mnist.load_data()

train_images = train_images / 255.0
test_images = test_images / 255.0

model = tf.keras.Sequential([
    tf.keras.layers.Flatten(input_shape=(28, 28)),
    tf.keras.layers.Dense(128, activation='relu'),
    tf.keras.layers.Dense(10, activation='softmax')
])

model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

model.fit(train_images, train_labels, epochs=10)

test_loss, test_acc = model.evaluate(test_images, test_labels)
print('Test accuracy:', test_acc)


predictions = model.predict(test_images)


class_names = ['T-shirt/top', 'Trouser', 'Pullover', 'Dress', 'Coat', 
               'Sandal', 'Shirt', 'Sneaker', 'Bag', 'Ankle boot']

def plot_image_and_prediction(i, true_label, img, predictions_array, class_names):
    plt.subplot(num_images, 2, 2*i+1)
    plt.imshow(img, cmap=plt.cm.binary)
    plt.xlabel(class_names[true_label])

    plt.subplot(num_images, 2, 2*i+2)
    plt.bar(class_names, predictions_array)
    plt.ylim([0, 1])
    plt.xticks(rotation=45)

num_images = 3
plt.figure(figsize=(12, num_images * 4))

for i in range(num_images):
    plot_image_and_prediction(i, test_labels[i], test_images[i], predictions[i], class_names)

plt.tight_layout()
plt.show()
